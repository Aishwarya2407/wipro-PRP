#stable and unstable:
import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int input1=12,input2=1313,input3=122,input4=678,input5=898;
		int a[]={input1,input2,input3,input4,input5};
		ArrayList<Integer>s1=new ArrayList<>();
		ArrayList<Integer>s2=new ArrayList<>();
		for(int i=0;i<a.length;i++){
		    ArrayList<Integer>l=new ArrayList<>();
		    LinkedHashSet<Integer> l1=new LinkedHashSet<>();
		   int  n=a[i];
		    while(a[i]>0){
		    int b=a[i]%10;
		    l.add(b);
		    l1.add(b);
		    a[i]=a[i]/10;
		   	}
		ArrayList<Integer>l2=new ArrayList<>(l1);
		LinkedHashSet<Integer> l3=new LinkedHashSet<>();
        for(int j=0;j<l2.size();j++)
        {
            int d=Collections.frequency(l,l2.get(j));
            l3.add(d);
        }
        if (l3.size()==1)
           s1.add(n);
        else
           s2.add(n);
		}
        int r1=Collections.max(s1);
        int r3=Collections.min(s1);
        int r4=Collections.max(s2);
        int r2=Collections.min(s2);
        //min of unstable + max of stable
        System.out.println(r2+r1);
        //max of stable -min of stable
        System.out.println(r1-r3);
        //max of unstable -min of unstable
        System.out.println(r4-r2);
        //(count of stable*10)+count of unstable
        System.out.println((s1.size()*10)+s2.size());
	}
}
